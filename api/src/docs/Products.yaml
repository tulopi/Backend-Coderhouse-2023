paths:
  /api/products:
    get:
      summary: Get all products
      tags:
        - Products
      responses:
        '200':
          description: All products
        '500':
          description: Server error
        '400':
          description: Some data is missing
    post:
      summary: Create a new product
      tags:
        - Products
      security:
        - jwt: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Products'
            example:
              title: "New Product"
              description: "Description of the new product."
              price: 99.99
              thumbnail: "https://via.placeholder.com/150"
              code: NEW001
              stock: 10
              category: "New Category"
      responses:
        '201':
          description: Product created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Products'
              example:
                _id: 65417d58a58ef22c0993afd1
                title: "New Product"
                description: "Description of the new product."
                price: 99.99
                thumbnail: "https://via.placeholder.com/150"
                code: NEW001
                stock: 10
                category: "New Category"
        '500':
          description: Server error
        '400':
          description: Some data is missing


  /api/products/{id}:
    get:
      summary: Get product by id
      tags:
        - Products
      parameters:
        - name: id
          in: path
          description: Product identifier
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Product details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Products'
              example:
                _id: 65417d58a58ef22c0993afd0
                title: "Smartphone"
                description: "A high-end smartphone with cutting-edge features."
                price: 799.99
                thumbnail: "https://via.placeholder.com/150"
                code: TECH001
                stock: 48
                category: Smartphones
        '500':
          description: Server error
        '400':
          description: Some data is missing
    delete:
      summary: Delete product by id
      tags:
        - Products
      security:
        - jwt: []
      parameters:
        - name: id
          in: path
          description: Product identifier
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Product deleted successfully
        '500':
          description: Server error
        '400':
          description: Some data is missing

  /api/products/faker/mockingproducts:
    get:
      summary: Mock Products
      tags:
        - Products
      description: Retrieve mocked products using Faker library.
      security:
        - jwt: []
      responses:
        '200':
          description: Mocked products retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: A message indicating the success of the operation
                  mocking:
                    type: array
                    description: Array of mocked products
                    items:
                      $ref: '#/components/schemas/Products'
        '500':
          description: Server error
        '401':
          description: Unauthorized - JWT token missing or invalid

  /api/products/{cid}/products/{pid}:
    post:
      summary: Add Product to Cart
      tags:
        - Products
      description: Add a product to the user's shopping cart.
      security:
        - jwt: []
      parameters:
        - name: cid
          in: path
          description: User's cart identifier
          required: true
          schema:
            type: string
        - name: pid
          in: path
          description: Product identifier
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                quantity:
                  type: integer
                  description: The quantity of the product to add to the cart
                  minimum: 1
                  default: 1
              required:
                - quantity
            example:
              quantity: 2
      responses:
        '200':
          description: Product added to cart successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: A message indicating the success of the operation
                  cart:
                    $ref: '#/components/schemas/Cart'
        '403':
          description: Forbidden - The owner can't purchase their own products
        '500':
          description: Server error
        '401':
          description: Unauthorized - JWT token missing or invalid
    delete:
      summary: Remove Product from Cart
      tags:
        - Products
      description: Remove a product from the user's shopping cart.
      security:
        - jwt: []
      parameters:
        - name: cid
          in: path
          description: User's cart identifier
          required: true
          schema:
            type: string
        - name: pid
          in: path
          description: Product identifier
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Product removed from cart successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: A message indicating the success of the operation
                  cart:
                    $ref: '#/components/schemas/Cart'
        '500':
          description: Server error
        '401':
          description: Unauthorized - JWT token missing or invalid
    put:
      summary: Update Product Quantity in Cart
      tags:
        - Products
      description: Update the quantity of a product in the user's shopping cart.
      security:
        - jwt: []
      parameters:
        - name: cid
          in: path
          description: User's cart identifier
          required: true
          schema:
            type: string
        - name: pid
          in: path
          description: Product identifier
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                quantity:
                  type: integer
                  description: The updated quantity of the product in the cart
                  minimum: 1
                  default: 1
              required:
                - quantity
            example:
              quantity: 3
      responses:
        '200':
          description: Product quantity updated in cart successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: A message indicating the success of the operation
                  cart:
                    $ref: '#/components/schemas/Cart'
        '500':
          description: Server error
        '401':
          description: Unauthorized - JWT token missing or invalid

  /api/products/{cid}:
    delete:
      summary: Delete User's Cart
      tags:
        - Products
      description: Delete the user's shopping cart.
      security:
        - jwt: []
      parameters:
        - name: cid
          in: path
          description: User's cart identifier
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Cart deleted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: A message indicating the success of the operation
                  cart:
                    $ref: '#/components/schemas/Cart'
        '500':
          description: Server error
        '401':
          description: Unauthorized - JWT token missing or invalid

  /api/products/{cid}/empty:
    delete:
      summary: Clear User's Cart
      tags:
        - Products
      description: Clear all products from the user's shopping cart.
      security:
        - jwt: [] 
      parameters:
        - name: cid
          in: path
          description: User's cart identifier
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Cart cleared successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: A message indicating the success of the operation
                  cart:
                    $ref: '#/components/schemas/Cart'
        '500':
          description: Server error
        '401':
          description: Unauthorized - JWT token missing or invalid


components:
  schemas:
    Products:
      type: object
      properties:
        _id:
          type: string
        title:
          type: string
          required: true
        description:
          type: string
          required: true
        price:
          type: number
          required: true
        thumbnail:
          type: string
          default: "https://via.placeholder.com/150"
          required: true
        code:
          type: string
          required: true
        stock:
          type: number
          required: true
        category:
          type: string
          required: true
        owner:
          type: string
          ref: "user"
      example:
        _id: 65417d58a58ef22c0993afd0
        title: Smartphone
        description: A high-end smartphone with cutting-edge features.
        price: 799.99
        thumbnail: "https://via.placeholder.com/150"
        code: TECH001
        stock: 48
        category: Smartphones
        owner: "5437d58a58ef22c0993afd6"
    Cart:
      type: object
      properties:
        _id:
          type: string
          description: Cart identifier
        products:
          type: array
          items:
            type: object
            properties:
              productId:
                type: string
                description: Product identifier
              quantity:
                type: integer
                description: Quantity of the product in the cart
            required:
              - productId
              - quantity
      example:
        _id: 65417d58a58ef22c0993afd2
        products:
          - productId: 65417d58a58ef22c0993afd1
            quantity: 2